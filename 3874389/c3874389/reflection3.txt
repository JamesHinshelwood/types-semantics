Reflection of 3874389

To grade the type and effect systems submission, use the following:

(i)   3.5 points or less (0.5 for examples, 0.5 for docs, rest for code)
-- (0.5) Examples look fine
-- (0.5) Not sure what docs there are to grade
-- (2.5) Code works fine as far as I can tell myself

(ii)  2   points or less (0.5 for examples, 0.5 for docs, rest for code)
-- (0.5) Examples look fine
-- (0.3) Typing rules are given informally, but are explained in great detail.
-- (1.0) Works fine

(iii) 2.5 points or less (0.5 for examples, 0.5 for docs, rest for code)
-- (0.5) Examples look fine
-- (0.3) Typing rules are given informally, but are explained in great detail.
-- (1.5) Works fine
(iv)  1   point or less
-- Not implemented
   
General readability of the pdf and the code: 1 point or less
-- (1) Pdf explains the typing system and typing rules in great detail. Furthermore, the code has been
       commented sufficiently. Also, I believe that the written code is quite readable in itself.

Issues to think of: 
  * do examples cover important cases, like list of functions, functions on
    pairs?
  * is subeffecting done in a way that tries to prevent poisoning? You can
    usually tell from the unification rule for functions (equating the
    annotation variables in that case usually means that active measures
    against poisoning were not taken).
  * Is the flow of the case statements done well?
  * does the documentation provide the necessary type rules and explanations
  * maybe it goes without saying, but if some part is partially answered,
    you should estimate the percentage that was done correctly.
    
Bonuspoint: 
  - is there a polyvariant implementation?
  No
  - if yes, give up to one point (don't forget to run it on examples where it 
    makes a difference)

Score for:
(i)        : 3.5
(ii)       : 1.8
(iii)      : 2.3
(iv)       : 0
Readability: 1
Bonus      : 0
------------------
Total score: 8.6
(between 0 and 11)